variables:
  ClientLibrary.Repo: $(Build.Repository.Uri)
  ClientLibrary.Commit: $(Build.SourceBranch)
  ClientLibrary.FrameworkRoot: $(Build.SourcesDirectory)


jobs:
- job: Cross_Compile
  steps:
  
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
      architecture: 'x64'

  - script: |
      python3 -m pip install -r $(ClientLibrary.FrameworkRoot)/devops/pyscripts/requirements.txt
    displayName: "pip install requirements.txt"
    condition: succeeded()

  - powershell: |
      $NormalizedRepo=$env:Repo
      if ($NormalizedRepo -like 'https://github.com/*') {
        $NormalizedRepo=$NormalizedRepo.Substring('https://github.com/'.length)
      }
      Write-Host "##vso[task.setvariable variable=normalizedRepo]${NormalizedRepo}"
      Write-Host "normalizedRepo=${NormalizedRepo}"
    displayName: Removing github.com from repo name if necessary
    env:
      Repo: $(ClientLibrary.Repo)
    ignoreLASTEXITCODE: false
    errorActionPreference: Stop
    failOnStderr: true
  
  - script: |
      python3 $(ClientLibrary.FrameworkRoot)/devops/pyscripts/build_docker_image.py --repo ${NormalizedRepo}  --commit $(ClientLibrary.Commit) 
    displayName: "build raspi-c docker image"
    condition: succeeded()
    env: 
      IOTHUB_E2E_REPO_ADDRESS: $(IOTHUB-E2E-REPO-ADDRESS)
      IOTHUB_E2E_REPO_USER: $(IOTHUB-E2E-REPO-USER)
      IOTHUB_E2E_REPO_PASSWORD: $(IOTHUB-E2E-REPO-PASSWORD)
      NormalizedRepo: $(NormalizedRepo)

  - task: CopyFiles@2
    displayName: 'Copy source tar to artifact staging'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/source_artifacts'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
    condition: succeeded()

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifacts: drop'
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'drop'
      publishLocation: 'Container'
    condition: succeeded()



- job: 'Run_Raspi_E2E_Tests'
  steps:
  - checkout: none
  - task: DownloadBuildArtifacts@0
    displayName: 'Download Build Artifacts'
    inputs:
      artifactName: drop
      itemPattern: 'drop/**/*e2e_exe'
  
  - task: Bash@3
    inputs:
      targetType: inline
      script:
        sudo -E ~/env_vars.sh
        chmod -R 777 drop/
        drop/cmake/iothub_client/tests/iothubclient_mqtt_e2e/iothubclient_mqtt_e2e_exe
        call jenkins\collect_results.cmd raspi
      workingDirectory: '$(System.ArtifactsDirectory)'
      displayName: 'Command Line Script'

  - task: PublishTestResults@2
    displayName: 'Publish Test Results "**/results-junit.xml"'
    inputs:
      testResultsFiles: "**/results-junit.xml"
      testRunTitle: 'raspberry pi'
  dependsOn: Cross_Compile
  condition: succeeded()